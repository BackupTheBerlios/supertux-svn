
- To do for Milestone2 -
http://super-tux.sf.net/

High priority: milestone goals that should be implemented for next milestone
Medium priority: would be nice to have for next milestone, but should
    be secondary to high priority goals
Low priority: things that should be fixed sometime
?: Things that need to be discussed to determine whether or not they should be
    implemented

Todo
----
H: high priority
M: medium priority
L: low priority
?: bug or feature?
    - needs discussion

--Scons--
 * [H] Add an install target - done (however scons is creating stupid .sconsign
                                     files at the install location :-/)
 * [M] improve opengl check to work on win32 and eventually more strange
   systems again
 * [H] Make sure compilation on win32 and cross-compilation works
 * [M] compile some test executables to test for SDL, SDL_mixer and SDL_image.
   Also test for version of SDL_mixer and SDL_image
 * [M] Create a distclean target
 * [M] Create a dist target
 * [M] Add instructions to the README
 * [L] If all of the [H] and [M] issues are fixed, remove autoconf/automake
 * [L] Take a look if it is possible to make it a bit more quiet. (Similar to
     linux kernel, samba or jam output would be optimum, ie.
       C++ build/linux/src/bla.o
       C++ build/linux/src/blup.o
       C++ build/linux/src/error.o
          Error on line xx in error.o: This source contained an error

       g++ -Wall .... -o build/linux/src/error.o src/error.cpp

--Collision Detection Rewrite (all [H])--
 * make blocks bounce again - ok
 * bonusblocks don't always bounce back to their original position (but stay a
    few pixels higher) - hopefully ok
 * it's impossible to go into passages that have exactly the size of tux,
   either reduce collision rectangle by DELTA or round collision coordinates to
   integers... - ok for tux and most badguys
 ** implement 1up - ok
 ** implement star - ok
 * bring back the enemies
    - add activation again - ok
    - make api simpler - ok
    - implement jumpy - ok
    -* implement spiky - ok
    - implement snowball - ok
    - implement fish
    - implement bouncingsnowball - ok
    -* implement mriceblock - ~ok
    - implement flame - ok
    -* implement mrbomb - ok
    - implement flyingsnowball
    - implement wingling
    - implement tree (really?)
    - bring back stay on platform flag
    - make enemies bounce of upon each other again
    - make enemies fall again - ok
    -* activate/deactive enemies when on screen/away again - ok
 ** implement ability to cary mriceblock (and other objects) around - delayed
    for  after big commit...
 * smoke clouds are too fast
 * some shots disappear in the ground with a "max collision depth reached"
   message - ok
 * rework collision detection to take movement into account - this should fix
    the egg suddenly turning directions and the somtimes strange behaviour
    when hitting a block from the side when falling.
      - done for rectangles, fixes the issues with blocks and enemies hitting
        when they should get squished, still it's not optimal as when hitting 2
        blocks now only 1 gets cleared... - ok
 * rethink slopes collision feedback... tux becomes too slow when walking up
    and starts jumping when walking down
 * think about an attachement mechanism for moving platforms
 * implement paths for the moving platform, implement simple moving platforms
 ** activate level end sequence again - ok
 ** make bullets kill enemies - ok
 * fix bullet speed/behaviour
 ** fix ducking - ok
 * check if unducking is actually possible or if something is in the way
 * fix flapping
 ** having a star doesn't kill enemies - ok
 * tux always jumps to full height at the moment - ok
 * invisble blocks are visible and make the game crash when bumped - ok
 * reimplement spikes as objects - ok
 * what to do when stuck under tiles (after using duck-sliding)
 * do we want multi hit scores again?
 * tux doesn't stop at igloo anymore
 * background particle systems are too slow - ok
 * buttjump is deactivated

--Code Refactoring/Cleanup/Optimisation--
[H] make the title using GameSession instead of reimplementing all the stuff
[L] rename gameloop.* files to gamesession.*
[L] rename GameObject::action to GameObject::update()
[L] use physfs for loading files
[L] eventually move over new lispreader code from tuxkart
[L] change physics class y-velocity-coordinate to be like all other
    y-coordinates again (positive y to go down)
[M] harmonize to 1 single gameloop that switches between title, worldmap,
    ingame mode and eventually leveleditor mode
[H] introduce a special mode in DrawingContext for objects that want to draw
    themselfes. This could speed up rendering of tilemaps.
[H] implement quadtree to speed up collision detection
[?] remove badguyspecs and bitmask files
[M] Make the gamelogic run in a fixed logical framerate

--Miscellaneous--
[?] think about how to implement scripting, and how to make a simple and easy to
  use api for the scripting interface
  (language will probably be lua - just have to figure out how well we can do
   without OO support in the scripting language.
   Other candidates are python, ruby and less likely java, mono/.net,
   surely no own invention, perl or 1 of these c-like scripting languages)

[?] Default keyboard setup should change. Up will be needed for other features
    like going through doors and looking up, etc.
  Up arrow    - Look up / activate
  Down arrow  - Look down / duck
  Left arrow  - Left move
  Right arrow - Right move
  Ctrl        - Run / Power
  Space       - Jump

[H] Worldmap should have a flag to allow to go to another map after finishing
    a level from that one.
    It might be cool to have a (place group in the worldmap file that would
    allow such stuff as: levels, messages, wrapping and worldmap changing
    (or even combinations).
[H] Change resolution to 800x600
     - Levels need to be updated to resolution
        - half of the levels have been already updated
        - some fixed levels still have "glitches". See the menu level where
          some of the tiles are "wrong" and don't fit
[H] Buttjump related things
     - Should kill enemies with a certain range
        - Done--now needs to be tweaked
     - Animation (need images)
     - Should be a powerup item (still to be discussed)
     - Should break bricks if Tux is on top of bricks, otherwise it should
       kill enemies within a close range.
        - After enemy-kill is used, powerup should be removed from Tux
[H] Icebullet related things
     - we should decide on specifics
[H] Tux should fall while walking in tiles that have a space between.
     - Possible solution: reduce Tux's width when checking collision with tiles
[H] Graphics
     - New forest tileset
     - Badguy sprites
     - Tux's buttjump animation
[H] Tiles constructed with image-region are not drawn coordinates < 0

[M] Save score on per-level basis to make high-score
[M] Save time on per-level basis to make low-time-score
[M] Add bonus score for extra time left when finishing a level
[M] when bumping a special with 2 blocks at once, it won't change direction
[M] tux get killed if he kicks a iceblock while at the same time bouncing on

[L] Allow any object to be inside of a [?] box, ie. trampoline or badguy
    - Not sure if this would be gameplay wise.

Beyond Milestone2
-----------------
- More things than just levels on the worldmap (similar to SMB3)
